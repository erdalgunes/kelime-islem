name: CI Optimized

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"

jobs:
  impact-analysis:
    runs-on: ubuntu-latest
    outputs:
      affected_modules: ${{ steps.analysis.outputs.affected_modules }}
      gradle_tasks: ${{ steps.analysis.outputs.gradle_tasks }}
      risk_level: ${{ steps.analysis.outputs.risk_level }}
      requires_full_build: ${{ steps.analysis.outputs.requires_full_build }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Run impact analysis
        id: analysis
        run: |
          chmod +x .github/scripts/impact-analysis.sh
          .github/scripts/impact-analysis.sh origin/main
          
  test:
    runs-on: ubuntu-latest
    needs: impact-analysis
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Setup Gradle with caching
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: false
          
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/jdks
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle/libs.versions.toml') }}
          restore-keys: |
            gradle-${{ runner.os }}-
            
      - name: Cache Android SDK
        uses: actions/cache@v3
        with:
          path: |
            ~/.android/sdk
            ~/.android/avd
          key: android-sdk-${{ runner.os }}-${{ hashFiles('**/build.gradle*') }}
          restore-keys: |
            android-sdk-${{ runner.os }}-
            
      - name: Run optimized tests
        run: |
          echo "Running tests for affected modules: ${{ needs.impact-analysis.outputs.affected_modules }}"
          if [[ -n "${{ needs.impact-analysis.outputs.gradle_tasks }}" ]]; then
            ./gradlew ${{ needs.impact-analysis.outputs.gradle_tasks }} --continue --build-cache --parallel
          else
            ./gradlew testDebugUnitTest --continue --build-cache --parallel
          fi
          
      - name: Generate coverage report
        run: ./gradlew koverXmlReport --build-cache
        
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ github.run_id }}
          path: |
            **/build/reports/tests/
            **/build/test-results/
          retention-days: 3
          
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports-${{ github.run_id }}
          path: |
            **/build/reports/kover/
          retention-days: 7

  quality-check:
    runs-on: ubuntu-latest
    needs: impact-analysis
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Setup Gradle with caching
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: false
          
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/jdks
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle/libs.versions.toml') }}
          restore-keys: |
            gradle-${{ runner.os }}-
            
      - name: Run Detekt analysis
        run: ./gradlew detekt --build-cache --parallel
        continue-on-error: true
        
      - name: Upload Detekt report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: detekt-report-${{ github.run_id }}
          path: build/reports/detekt/
          retention-days: 7
          
      - name: SonarCloud analysis
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: [impact-analysis, test, quality-check]
    if: needs.impact-analysis.outputs.requires_full_build == 'true' || github.event_name == 'push'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Setup Gradle with caching
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: false
          
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/jdks
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle/libs.versions.toml') }}
          restore-keys: |
            gradle-${{ runner.os }}-
            
      - name: Build debug APK
        run: ./gradlew assembleDebug --build-cache --parallel
        
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk-${{ github.run_id }}
          path: app/build/outputs/apk/debug/*.apk
          retention-days: 7
          
  build-summary:
    runs-on: ubuntu-latest
    needs: [impact-analysis, test, quality-check, build]
    if: always()
    
    steps:
      - name: Create build summary
        run: |
          echo "## 🏗️ Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Impact Analysis:**" >> $GITHUB_STEP_SUMMARY
          echo "- Risk Level: ${{ needs.impact-analysis.outputs.risk_level }}" >> $GITHUB_STEP_SUMMARY
          echo "- Affected Modules: ${{ needs.impact-analysis.outputs.affected_modules }}" >> $GITHUB_STEP_SUMMARY
          echo "- Full Build Required: ${{ needs.impact-analysis.outputs.requires_full_build }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Job Results:**" >> $GITHUB_STEP_SUMMARY
          echo "- Tests: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Quality Check: ${{ needs.quality-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Build: ${{ needs.build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.test.result }}" == "success" && "${{ needs.quality-check.result }}" == "success" ]]; then
            echo "✅ **All checks passed!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Some checks failed. Please review the logs.**" >> $GITHUB_STEP_SUMMARY
          fi