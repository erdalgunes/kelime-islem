name: Automatic Version Management

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - auto

  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.github/workflows/**'
      - 'docs/**'

  release:
    types: [published]

permissions:
  contents: write
  pull-requests: write

jobs:
  version-bump:
    name: Automatic Version Bump
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Make scripts executable
      run: chmod +x scripts/version-manager.sh

    - name: Determine version bump type
      id: bump_type
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          BUMP_TYPE="${{ github.event.inputs.version_type }}"
        else
          # Auto-detect from commit messages
          BUMP_TYPE="auto"
        fi
        echo "type=$BUMP_TYPE" >> $GITHUB_OUTPUT

    - name: Bump version
      id: version
      run: |
        ./scripts/version-manager.sh bump-${{ steps.bump_type.outputs.type }}
        NEW_VERSION=$(./scripts/version-manager.sh get-version)
        NEW_CODE=$(./scripts/version-manager.sh get-code)
        echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "code=$NEW_CODE" >> $GITHUB_OUTPUT

    - name: Commit version changes
      run: |
        git add gradle/version.properties
        git add androidApp/build.gradle.kts
        git add version-metadata.json
        git commit -m "chore: bump version to ${{ steps.version.outputs.version }} [skip ci]" || echo "No changes to commit"

    - name: Push changes
      if: github.event_name == 'push'
      run: |
        git push origin main

    - name: Create Pull Request
      if: github.event_name == 'workflow_dispatch'
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: bump version to ${{ steps.version.outputs.version }}"
        title: "🔖 Bump version to ${{ steps.version.outputs.version }}"
        body: |
          ## Version Bump

          This PR automatically bumps the version to **${{ steps.version.outputs.version }}**

          - Version: `${{ steps.version.outputs.version }}`
          - Version Code: `${{ steps.version.outputs.code }}`
          - Bump Type: `${{ steps.bump_type.outputs.type }}`

          ### Files Updated
          - `gradle/version.properties`
          - `androidApp/build.gradle.kts`
          - `version-metadata.json`

          ---
          *🤖 This PR was automatically generated*
        branch: auto-version-bump-${{ steps.version.outputs.version }}
        delete-branch: true

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: version-bump
    if: github.event_name == 'push' && contains(github.event.head_commit.message, '[release]')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Get current version
      id: version
      run: |
        chmod +x scripts/version-manager.sh
        VERSION=$(./scripts/version-manager.sh get-version)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Build release APK
      run: |
        chmod +x gradlew
        ./gradlew :composeApp:assembleRelease

    - name: Generate changelog
      id: changelog
      run: |
        CHANGELOG=$(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 2>/dev/null || echo "")..HEAD | grep -v "skip ci" | head -20)
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: Release v${{ steps.version.outputs.version }}
        body: |
          ## 🎉 Release v${{ steps.version.outputs.version }}

          ### 📝 Changelog
          ${{ steps.changelog.outputs.changelog }}

          ### 📦 Assets
          - **APK**: Download the Android app below
          - **Version Code**: ${{ steps.version.outputs.code }}

          ### 🔄 Obtanium Support
          This release is compatible with [Obtanium](https://github.com/ImranR98/Obtainium) for automatic updates.

          Add this app to Obtanium using:
          - **Source URL**: `https://github.com/erdalgunes/kelime-islem`
          - **App ID**: `com.erdalgunes.kelimeislem`

          ---
          *🤖 This release was automatically generated*
        files: |
          composeApp/build/outputs/apk/release/*.apk
          version-metadata.json
        draft: false
        prerelease: false

  update-check:
    name: Obtanium-Style Update Check
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for updates
      run: |
        chmod +x scripts/version-manager.sh
        ./scripts/version-manager.sh check-update

    - name: Generate update notification
      id: update_info
      run: |
        VERSION=$(./scripts/version-manager.sh get-version)
        cat > update-notification.json << EOF
        {
          "updateAvailable": true,
          "version": "$VERSION",
          "releaseUrl": "https://github.com/erdalgunes/kelime-islem/releases/latest",
          "timestamp": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
        }
        EOF

    - name: Upload update notification
      uses: actions/upload-artifact@v4
      with:
        name: update-notification
        path: update-notification.json