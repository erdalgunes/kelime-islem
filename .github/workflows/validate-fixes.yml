name: Validate Auto-Fixes

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
      - 'auto-fix/**'

permissions:
  contents: read
  pull-requests: write
  statuses: write

jobs:
  validate:
    name: Validate Auto-Fix Safety
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'auto-fix/')

    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Setup validation environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run comprehensive validation
        id: validate
        run: |
          echo "🔍 Validating auto-fix PR..."

          # Test suite
          echo "Running tests..."
          npm test -- --coverage 2>&1 | tee test.log
          TEST_EXIT=${PIPESTATUS[0]}

          # Lint check
          echo "Running lint..."
          npm run lint 2>&1 | tee lint.log
          LINT_EXIT=${PIPESTATUS[0]}

          # Build check
          echo "Running build..."
          npm run build 2>&1 | tee build.log
          BUILD_EXIT=${PIPESTATUS[0]}

          # Security audit
          echo "Running security audit..."
          npm audit --audit-level=high 2>&1 | tee audit.log
          AUDIT_EXIT=$?

          # Determine overall status
          if [ $TEST_EXIT -eq 0 ] && [ $LINT_EXIT -eq 0 ] && [ $BUILD_EXIT -eq 0 ]; then
            echo "✅ All validations passed"
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "❌ Validation failed"
            echo "status=failure" >> $GITHUB_OUTPUT
          fi

      - name: Post validation results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ steps.validate.outputs.status }}';
            const passed = status === 'success';

            const comment = `## 🤖 Auto-Fix Validation Results\n
            ${passed ? '✅ **All checks passed!**' : '❌ **Validation failed**'}

            ### Checks Performed:
            - Unit Tests: ${passed ? '✅' : '❌'}
            - Linting: ${passed ? '✅' : '❌'}
            - Build: ${passed ? '✅' : '❌'}
            - Security: ${passed ? '✅' : '⚠️'}

            ${passed ?
              '### ✅ This auto-fix is safe to merge\n\nThe automated fix has been validated and all checks pass. Please review the changes and merge if appropriate.' :
              '### ⚠️ Manual intervention required\n\nThe automated fix failed validation. Please review the logs and fix manually.'}

            ---
            *Generated by Codegen.sh Self-Healing CI*`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });

      - name: Auto-merge if safe
        if: steps.validate.outputs.status == 'success'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Add auto-merge label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['auto-merge', 'validated']
            });

            // Enable auto-merge (if repo has it enabled)
            try {
              await github.rest.pulls.updateBranch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number
              });
            } catch (e) {
              console.log('Auto-merge not available');
            }