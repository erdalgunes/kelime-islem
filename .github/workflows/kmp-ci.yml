name: KMP CI/CD Pipeline

on:
  push:
    branches: [ main, develop, 'release/**', 'hotfix/**' ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Weekly dependency and security check
    - cron: '0 0 * * 0'
  workflow_dispatch:

# Smart concurrency: cancel for PRs, keep for main branches
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' || startsWith(github.ref, 'refs/heads/feature/') }}

jobs:
  # ============================================
  # LINT AND CODE QUALITY
  # ============================================
  lint-and-analysis:
    name: Code Quality & Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for SonarCloud

    - name: Setup KMP Environment
      uses: ./.github/actions/setup-kmp
      with:
        gradle-cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
        cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' }}

    - name: Run lint checks
      run: ./gradlew :composeApp:lint --continue
      continue-on-error: true

    - name: Upload lint reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-reports
        path: |
          build/reports/lint/
          composeApp/build/reports/lint/
        retention-days: 7

  # ============================================
  # PARALLEL PLATFORM TESTING
  # ============================================
  test-matrix:
    name: Test - ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    needs: lint-and-analysis

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: android
            os: ubuntu-latest
            task: testDebugUnitTest
            report-path: composeApp/build/test-results/testDebugUnitTest/*.xml

          - platform: js
            os: ubuntu-latest
            task: jsNodeTest
            report-path: composeApp/build/test-results/jsNodeTest/*.xml

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup KMP Environment
      uses: ./.github/actions/setup-kmp
      with:
        gradle-cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
        cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' }}

    - name: Run ${{ matrix.platform }} tests
      run: |
        START_TIME=$(date +%s)
        ./gradlew :composeApp:${{ matrix.task }} --stacktrace --build-cache
        END_TIME=$(date +%s)
        DURATION=$((END_TIME - START_TIME))
        echo "## âœ… ${{ matrix.platform }} Test Results" >> $GITHUB_STEP_SUMMARY
        echo "- **Duration**: ${DURATION}s" >> $GITHUB_STEP_SUMMARY
        echo "- **Task**: \`:composeApp:${{ matrix.task }}\`" >> $GITHUB_STEP_SUMMARY

    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: ${{ matrix.platform }}-tests
        path: ${{ matrix.report-path }}
        reporter: java-junit

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.platform }}
        path: |
          composeApp/build/reports/tests/
          composeApp/build/test-results/
        retention-days: 7

  # ============================================
  # CODE COVERAGE AND SONARCLOUD
  # ============================================
  coverage-and-sonar:
    name: Coverage & SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: test-matrix

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup KMP Environment
      uses: ./.github/actions/setup-kmp
      with:
        gradle-cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
        cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' }}

    - name: Run tests with coverage
      run: ./gradlew :composeApp:testDebugUnitTest :composeApp:koverXmlReport :composeApp:koverHtmlReport --build-cache

    - name: Verify coverage threshold
      run: |
        ./gradlew :composeApp:koverVerify --build-cache || EXIT_CODE=$?
        if [ -f composeApp/build/reports/kover/report.xml ]; then
          COVERAGE=$(grep -oP 'line-rate="\K[^"]+' composeApp/build/reports/kover/report.xml | head -1)
          PERCENTAGE=$(echo "scale=1; $COVERAGE * 100" | bc)
          echo "## ðŸ“Š Code Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "- **Overall Coverage**: ${PERCENTAGE}%" >> $GITHUB_STEP_SUMMARY
          echo "- **Minimum Required**: 80%" >> $GITHUB_STEP_SUMMARY
        fi
        exit ${EXIT_CODE:-0}
      continue-on-error: ${{ github.event_name != 'pull_request' }}

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Upload coverage to Codecov
      if: always()
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./composeApp/build/reports/kover/report.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Add coverage comment to PR
      if: github.event_name == 'pull_request'
      uses: mi-kas/kover-report@v1.9
      with:
        path: composeApp/build/reports/kover/report.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        title: Code Coverage Report
        update-comment: true
        min-coverage-overall: 80
        min-coverage-changed-files: 80

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports
        path: composeApp/build/reports/kover/html/
        retention-days: 7

  # ============================================
  # SECURITY SCANNING
  # ============================================
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    needs: lint-and-analysis

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy security scan
      uses: aquasecurity/trivy-action@v0.25.0
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
        ignore-unfixed: true

    - name: Upload Trivy results to GitHub Security
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Setup KMP Environment for dependency check
      uses: ./.github/actions/setup-kmp
      with:
        gradle-cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
        cache-read-only: true

    - name: Check for dependency vulnerabilities
      run: ./gradlew dependencyCheckAnalyze 2>/dev/null || echo "Dependency check plugin not configured"
      continue-on-error: true

  # ============================================
  # BUILD ARTIFACTS
  # ============================================
  build-artifacts:
    name: Build Artifacts
    runs-on: ubuntu-latest
    needs: [test-matrix, coverage-and-sonar]
    if: success()

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup KMP Environment
      uses: ./.github/actions/setup-kmp
      with:
        gradle-cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
        cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' }}

    - name: Build debug APK
      run: ./gradlew :composeApp:assembleDebug

    - name: Build JS/Web bundle
      run: ./gradlew :composeApp:jsBrowserDistribution

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: composeApp/build/outputs/apk/debug/*.apk
        retention-days: 30

    - name: Upload Web artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: web-artifacts
        path: composeApp/build/dist/js/productionExecutable/
        retention-days: 30

  # ============================================
  # DEPENDENCY CHECK (Weekly)
  # ============================================
  dependency-check:
    name: Dependency Updates Check
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup KMP Environment
      uses: ./.github/actions/setup-kmp
      with:
        gradle-cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
        cache-read-only: true

    - name: Check for dependency updates
      run: |
        ./gradlew dependencyUpdates -Drevision=release
        echo "Check build/dependencyUpdates/report.txt for available updates"

    - name: Upload dependency report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-updates-report
        path: build/dependencyUpdates/
        retention-days: 7