name: KMP CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Weekly dependency and security check
    - cron: '0 0 * * 0'
  workflow_dispatch:

# Cancel previous runs for the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Grant necessary permissions for test reporters and PR comments
permissions:
  contents: read
  checks: write       # Required for test reporter to create check runs
  pull-requests: write # Required for PR comments

jobs:
  # ============================================
  # LINT AND CODE QUALITY
  # ============================================
  lint-and-analysis:
    name: Code Quality & Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for SonarCloud

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle with caching
      uses: gradle/actions/setup-gradle@v4
      with:
        cache-read-only: ${{ github.ref != 'refs/heads/main' }}
        cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run lint checks
      run: ./gradlew lint --continue
      continue-on-error: true

    - name: Upload lint reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-reports
        path: |
          build/reports/lint/
          composeApp/build/reports/lint/
        retention-days: 7

  # ============================================
  # PARALLEL PLATFORM TESTING
  # ============================================
  test-matrix:
    name: Test - ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    needs: lint-and-analysis

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: android
            os: ubuntu-latest
            task: :composeApp:testDebugUnitTest
            report-path: composeApp/build/test-results/testDebugUnitTest/*.xml

          - platform: js
            os: ubuntu-latest
            task: :composeApp:jsNodeTest
            report-path: composeApp/build/test-results/jsNodeTest/*.xml

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle with caching
      uses: gradle/actions/setup-gradle@v4
      with:
        cache-read-only: ${{ github.ref != 'refs/heads/main' }}
        cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}


    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run ${{ matrix.platform }} tests
      run: ./gradlew ${{ matrix.task }} --stacktrace

    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      continue-on-error: true  # Don't fail job if reporter has permission issues
      with:
        name: ${{ matrix.platform }}-tests
        path: ${{ matrix.report-path }}
        reporter: java-junit

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.platform }}
        path: |
          composeApp/build/reports/tests/
          composeApp/build/test-results/
        retention-days: 7

  # ============================================
  # CODE COVERAGE AND SONARCLOUD
  # ============================================
  coverage-and-sonar:
    name: Coverage & SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: test-matrix

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle with caching
      uses: gradle/actions/setup-gradle@v4
      with:
        cache-read-only: ${{ github.ref != 'refs/heads/main' }}
        cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run tests with coverage
      run: ./gradlew testDebugUnitTest koverXmlReport koverHtmlReport

    - name: Verify coverage threshold
      run: ./gradlew koverVerify
      continue-on-error: ${{ github.event_name != 'pull_request' }}

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Upload coverage to Codecov
      if: always()
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./composeApp/build/reports/kover/report.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Add coverage comment to PR
      if: github.event_name == 'pull_request'
      uses: mi-kas/kover-report@v1
      continue-on-error: true  # Don't fail job if commenting fails
      with:
        path: composeApp/build/reports/kover/report.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        title: Code Coverage Report
        update-comment: true
        min-coverage-overall: 80
        min-coverage-changed-files: 80

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports
        path: composeApp/build/reports/kover/html/
        retention-days: 7

  # ============================================
  # SECURITY SCANNING
  # ============================================
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    needs: lint-and-analysis

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy security scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
        ignore-unfixed: true

    - name: Upload Trivy results to GitHub Security
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Set up JDK 17 for dependency check
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle with caching
      uses: gradle/actions/setup-gradle@v4
      with:
        cache-read-only: true

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Check for dependency vulnerabilities
      run: ./gradlew dependencyCheckAnalyze || true
      continue-on-error: true

  # ============================================
  # BUILD ARTIFACTS
  # ============================================
  build-artifacts:
    name: Build Artifacts
    runs-on: ubuntu-latest
    needs: [test-matrix, coverage-and-sonar]
    if: success()

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle with caching
      uses: gradle/actions/setup-gradle@v4
      with:
        cache-read-only: ${{ github.ref != 'refs/heads/main' }}
        cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build debug APK
      run: ./gradlew :composeApp:assembleDebug

    - name: Build JS/Web bundle
      run: ./gradlew :composeApp:jsBrowserDistribution
      continue-on-error: true

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: composeApp/build/outputs/apk/debug/*.apk
        retention-days: 30

    - name: Upload Web artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: web-artifacts
        path: composeApp/build/dist/js/productionExecutable/
        retention-days: 30

  # ============================================
  # DEPENDENCY CHECK (Weekly)
  # ============================================
  dependency-check:
    name: Dependency Updates Check
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle with caching
      uses: gradle/actions/setup-gradle@v4

    - name: Check for dependency updates
      run: |
        ./gradlew dependencyUpdates -Drevision=release
        echo "Check build/dependencyUpdates/report.txt for available updates"

    - name: Upload dependency report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-updates-report
        path: build/dependencyUpdates/
        retention-days: 7