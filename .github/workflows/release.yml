name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write  # Required for creating releases
  actions: read    # Required for accessing workflow artifacts

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false  # Don't cancel release builds

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for release notes generation
    
    - name: Setup Gradle environment
      uses: ./.github/actions/setup-gradle
    
    - name: Extract version from tag
      id: version
      run: |
        echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Run comprehensive tests
      run: ./gradlew testDebugUnitTest koverXmlReport --build-cache --parallel
    
    - name: Verify coverage threshold
      run: |
        ./gradlew koverVerify || {
          echo "❌ Coverage is below the required threshold!"
          echo "Please ensure your changes maintain adequate test coverage."
          exit 1
        }
    
    - name: Run Android Lint
      run: ./gradlew lintRelease --build-cache
    
    - name: Build release APK
      run: ./gradlew assembleRelease --build-cache --parallel
    
    - name: Verify APK exists
      run: |
        APK_PATH="composeApp/build/outputs/apk/release/composeApp-release-unsigned.apk"
        if [ ! -f "$APK_PATH" ]; then
          echo "❌ Release APK not found at $APK_PATH"
          echo "Available files:"
          find composeApp/build/outputs/apk/release/ -name "*.apk" || true
          exit 1
        fi
        echo "✅ Release APK found at $APK_PATH"
        ls -la "$APK_PATH"
    
    - name: Generate release notes
      id: release_notes
      run: |
        # Generate release notes from commits since last tag
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -n "$PREV_TAG" ]; then
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "## Changes since $PREV_TAG" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "RELEASE_NOTES=Initial release of Bir Kelime Bir İşlem" >> $GITHUB_OUTPUT
        fi
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version.outputs.TAG_NAME }}
        name: Release ${{ steps.version.outputs.TAG_NAME }}
        body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
        draft: false
        prerelease: false
        files: |
          composeApp/build/outputs/apk/release/composeApp-release-unsigned.apk
        fail_on_unmatched_files: true
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: release-artifacts-${{ steps.version.outputs.VERSION }}
        path: |
          composeApp/build/outputs/apk/release/*.apk
          composeApp/build/reports/kover/report.xml
          composeApp/build/reports/lint-results-release.html
        retention-days: 30