name: PR Check

permissions:
  contents: read
  checks: write
  pull-requests: write
  security-events: write
  actions: read

on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  pr-validation:
    runs-on: ubuntu-latest
    name: PR Validation & Coverage Check
    
    steps:
    - name: Checkout PR code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for proper diff analysis
        ref: ${{ github.event.pull_request.head.sha }}
    
    - name: Setup Gradle environment
      uses: ./.github/actions/setup-gradle
    
    - name: Run comprehensive tests
      run: |
        echo "üß™ Running comprehensive test suite for PR..."
        ./gradlew :composeApp:testDebugUnitTest koverXmlReport --build-cache --parallel || {
          echo "‚ùå Tests failed in PR! Please fix failing tests."
          exit 1
        }
        echo "‚úÖ All tests passed"
    
    - name: Run Android Lint
      run: |
        echo "üîç Running Android Lint for PR changes..."
        ./gradlew :composeApp:lintDebug --build-cache
        echo "‚úÖ Lint analysis completed"
    
    - name: Verify coverage report exists
      run: |
        COVERAGE_FILE="./composeApp/build/reports/kover/report.xml"
        if [ ! -f "$COVERAGE_FILE" ]; then
          echo "‚ùå Coverage report missing at $COVERAGE_FILE"
          exit 1
        fi
        echo "‚úÖ Coverage report verified"

    - name: SonarCloud PR Analysis
      if: ${{ secrets.SONAR_TOKEN != '' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        echo "üìä Running SonarCloud analysis for PR..."
        ./gradlew sonar --info --build-cache \
          -Dsonar.pullrequest.key=${{ github.event.pull_request.number }} \
          -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }} \
          -Dsonar.pullrequest.base=${{ github.event.pull_request.base.ref }} || {
          echo "‚ùå SonarCloud PR analysis failed!"
          exit 1
        }
        echo "‚úÖ SonarCloud PR analysis completed"

    - name: Add coverage comment to PR
      uses: mi-kas/kover-report@v1
      with:
        path: composeApp/build/reports/kover/report.xml
        token: ${{ secrets.PAT_COVERAGE_TOKEN || secrets.GITHUB_TOKEN }}
        title: "üìä Code Coverage Report"
        update-comment: true
        min-coverage-overall: 80
        min-coverage-changed-files: 80
        show-class-coverage: true
        coverage-counter-type: LINE
    
    - name: Verify coverage threshold
      run: |
        echo "üéØ Verifying coverage meets minimum thresholds..."
        ./gradlew koverVerify || {
          echo "‚ùå Coverage threshold not met!"
          echo "Please add tests to meet the minimum coverage requirements."
          exit 1
        }
        echo "‚úÖ Coverage threshold verified"
    
    - name: Upload PR artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pr-validation-${{ github.event.pull_request.number }}
        path: |
          composeApp/build/reports/tests/testDebugUnitTest/
          composeApp/build/reports/kover/
          composeApp/build/reports/lint-results-debug.html
        retention-days: 14